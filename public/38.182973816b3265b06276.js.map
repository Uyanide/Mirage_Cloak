{"version":3,"file":"38.182973816b3265b06276.js","mappings":"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","sources":["webpack://mirage_cloak/./src/scripts/libs/JPEGEncoder.js","webpack://mirage_cloak/./src/scripts/processors/CloakEncoder.js","webpack://mirage_cloak/./src/scripts/processors/CloakUniversal.js"],"sourcesContent":["/*\r\n  Copyright (c) 2008, Adobe Systems Incorporated\r\n  All rights reserved.\r\n\r\n  Redistribution and use in source and binary forms, with or without\r\n  modification, are permitted provided that the following conditions are\r\n  met:\r\n\r\n  * Redistributions of source code must retain the above copyright notice,\r\n    this list of conditions and the following disclaimer.\r\n\r\n  * Redistributions in binary form must reproduce the above copyright\r\n    notice, this list of conditions and the following disclaimer in the\r\n    documentation and/or other materials provided with the distribution.\r\n\r\n  * Neither the name of Adobe Systems Incorporated nor the names of its\r\n    contributors may be used to endorse or promote products derived from\r\n    this software without specific prior written permission.\r\n\r\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\r\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\r\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\r\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\r\n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n/*\r\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\r\n\r\nBasic GUI blocking jpeg encoder\r\n*/\r\n\r\nvar btoa = btoa || function (buf) {\r\n    return Buffer.from(buf).toString('base64');\r\n};\r\n\r\nfunction JPEGEncoder(quality) {\r\n    var self = this;\r\n    var fround = Math.round;\r\n    var ffloor = Math.floor;\r\n    var YTable = new Array(64);\r\n    var UVTable = new Array(64);\r\n    var fdtbl_Y = new Array(64);\r\n    var fdtbl_UV = new Array(64);\r\n    var YDC_HT;\r\n    var UVDC_HT;\r\n    var YAC_HT;\r\n    var UVAC_HT;\r\n\r\n    var bitcode = new Array(65535);\r\n    var category = new Array(65535);\r\n    var outputfDCTQuant = new Array(64);\r\n    var DU = new Array(64);\r\n    var byteout = [];\r\n    var bytenew = 0;\r\n    var bytepos = 7;\r\n\r\n    var YDU = new Array(64);\r\n    var UDU = new Array(64);\r\n    var VDU = new Array(64);\r\n    var clt = new Array(256);\r\n    var RGB_YUV_TABLE = new Array(2048);\r\n    var currentQuality;\r\n\r\n    var ZigZag = [\r\n        0, 1, 5, 6, 14, 15, 27, 28,\r\n        2, 4, 7, 13, 16, 26, 29, 42,\r\n        3, 8, 12, 17, 25, 30, 41, 43,\r\n        9, 11, 18, 24, 31, 40, 44, 53,\r\n        10, 19, 23, 32, 39, 45, 52, 54,\r\n        20, 22, 33, 38, 46, 51, 55, 60,\r\n        21, 34, 37, 47, 50, 56, 59, 61,\r\n        35, 36, 48, 49, 57, 58, 62, 63\r\n    ];\r\n\r\n    var std_dc_luminance_nrcodes = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0];\r\n    var std_dc_luminance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n    var std_ac_luminance_nrcodes = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d];\r\n    var std_ac_luminance_values = [\r\n        0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,\r\n        0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,\r\n        0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,\r\n        0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,\r\n        0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,\r\n        0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,\r\n        0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,\r\n        0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,\r\n        0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,\r\n        0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,\r\n        0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,\r\n        0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,\r\n        0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,\r\n        0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,\r\n        0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,\r\n        0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,\r\n        0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,\r\n        0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,\r\n        0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,\r\n        0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,\r\n        0xf9, 0xfa\r\n    ];\r\n\r\n    var std_dc_chrominance_nrcodes = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0];\r\n    var std_dc_chrominance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n    var std_ac_chrominance_nrcodes = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77];\r\n    var std_ac_chrominance_values = [\r\n        0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,\r\n        0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,\r\n        0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,\r\n        0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,\r\n        0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,\r\n        0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,\r\n        0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,\r\n        0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,\r\n        0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,\r\n        0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,\r\n        0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,\r\n        0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\r\n        0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,\r\n        0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,\r\n        0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,\r\n        0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,\r\n        0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,\r\n        0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,\r\n        0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,\r\n        0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,\r\n        0xf9, 0xfa\r\n    ];\r\n\r\n    function initQuantTables(sf) {\r\n        var YQT = [\r\n            16, 11, 10, 16, 24, 40, 51, 61,\r\n            12, 12, 14, 19, 26, 58, 60, 55,\r\n            14, 13, 16, 24, 40, 57, 69, 56,\r\n            14, 17, 22, 29, 51, 87, 80, 62,\r\n            18, 22, 37, 56, 68, 109, 103, 77,\r\n            24, 35, 55, 64, 81, 104, 113, 92,\r\n            49, 64, 78, 87, 103, 121, 120, 101,\r\n            72, 92, 95, 98, 112, 100, 103, 99\r\n        ];\r\n\r\n        for (var i = 0; i < 64; i++) {\r\n            var t = ffloor((YQT[i] * sf + 50) / 100);\r\n            if (t < 1) {\r\n                t = 1;\r\n            } else if (t > 255) {\r\n                t = 255;\r\n            }\r\n            YTable[ZigZag[i]] = t;\r\n        }\r\n        var UVQT = [\r\n            17, 18, 24, 47, 99, 99, 99, 99,\r\n            18, 21, 26, 66, 99, 99, 99, 99,\r\n            24, 26, 56, 99, 99, 99, 99, 99,\r\n            47, 66, 99, 99, 99, 99, 99, 99,\r\n            99, 99, 99, 99, 99, 99, 99, 99,\r\n            99, 99, 99, 99, 99, 99, 99, 99,\r\n            99, 99, 99, 99, 99, 99, 99, 99,\r\n            99, 99, 99, 99, 99, 99, 99, 99\r\n        ];\r\n        for (var j = 0; j < 64; j++) {\r\n            var u = ffloor((UVQT[j] * sf + 50) / 100);\r\n            if (u < 1) {\r\n                u = 1;\r\n            } else if (u > 255) {\r\n                u = 255;\r\n            }\r\n            UVTable[ZigZag[j]] = u;\r\n        }\r\n        var aasf = [\r\n            1.0, 1.387039845, 1.306562965, 1.175875602,\r\n            1.0, 0.785694958, 0.541196100, 0.275899379\r\n        ];\r\n        var k = 0;\r\n        for (var row = 0; row < 8; row++) {\r\n            for (var col = 0; col < 8; col++) {\r\n                fdtbl_Y[k] = (1.0 / (YTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\r\n                fdtbl_UV[k] = (1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\r\n                k++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function computeHuffmanTbl(nrcodes, std_table) {\r\n        var codevalue = 0;\r\n        var pos_in_table = 0;\r\n        var HT = new Array();\r\n        for (var k = 1; k <= 16; k++) {\r\n            for (var j = 1; j <= nrcodes[k]; j++) {\r\n                HT[std_table[pos_in_table]] = [];\r\n                HT[std_table[pos_in_table]][0] = codevalue;\r\n                HT[std_table[pos_in_table]][1] = k;\r\n                pos_in_table++;\r\n                codevalue++;\r\n            }\r\n            codevalue *= 2;\r\n        }\r\n        return HT;\r\n    }\r\n\r\n    function initHuffmanTbl() {\r\n        YDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes, std_dc_luminance_values);\r\n        UVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes, std_dc_chrominance_values);\r\n        YAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes, std_ac_luminance_values);\r\n        UVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes, std_ac_chrominance_values);\r\n    }\r\n\r\n    function initCategoryNumber() {\r\n        var nrlower = 1;\r\n        var nrupper = 2;\r\n        for (var cat = 1; cat <= 15; cat++) {\r\n            //Positive numbers\r\n            for (var nr = nrlower; nr < nrupper; nr++) {\r\n                category[32767 + nr] = cat;\r\n                bitcode[32767 + nr] = [];\r\n                bitcode[32767 + nr][1] = cat;\r\n                bitcode[32767 + nr][0] = nr;\r\n            }\r\n            //Negative numbers\r\n            for (var nrneg = -(nrupper - 1); nrneg <= -nrlower; nrneg++) {\r\n                category[32767 + nrneg] = cat;\r\n                bitcode[32767 + nrneg] = [];\r\n                bitcode[32767 + nrneg][1] = cat;\r\n                bitcode[32767 + nrneg][0] = nrupper - 1 + nrneg;\r\n            }\r\n            nrlower <<= 1;\r\n            nrupper <<= 1;\r\n        }\r\n    }\r\n\r\n    function initRGBYUVTable() {\r\n        for (var i = 0; i < 256; i++) {\r\n            RGB_YUV_TABLE[i] = 19595 * i;\r\n            RGB_YUV_TABLE[(i + 256) >> 0] = 38470 * i;\r\n            RGB_YUV_TABLE[(i + 512) >> 0] = 7471 * i + 0x8000;\r\n            RGB_YUV_TABLE[(i + 768) >> 0] = -11059 * i;\r\n            RGB_YUV_TABLE[(i + 1024) >> 0] = -21709 * i;\r\n            RGB_YUV_TABLE[(i + 1280) >> 0] = 32768 * i + 0x807FFF;\r\n            RGB_YUV_TABLE[(i + 1536) >> 0] = -27439 * i;\r\n            RGB_YUV_TABLE[(i + 1792) >> 0] = - 5329 * i;\r\n        }\r\n    }\r\n\r\n    // IO functions\r\n    function writeBits(bs) {\r\n        var value = bs[0];\r\n        var posval = bs[1] - 1;\r\n        while (posval >= 0) {\r\n            if (value & (1 << posval)) {\r\n                bytenew |= (1 << bytepos);\r\n            }\r\n            posval--;\r\n            bytepos--;\r\n            if (bytepos < 0) {\r\n                if (bytenew == 0xFF) {\r\n                    writeByte(0xFF);\r\n                    writeByte(0);\r\n                }\r\n                else {\r\n                    writeByte(bytenew);\r\n                }\r\n                bytepos = 7;\r\n                bytenew = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function writeByte(value) {\r\n        //byteout.push(clt[value]); // write char directly instead of converting later\r\n        byteout.push(value);\r\n    }\r\n\r\n    function writeWord(value) {\r\n        writeByte((value >> 8) & 0xFF);\r\n        writeByte((value) & 0xFF);\r\n    }\r\n\r\n    // DCT & quantization core\r\n    function fDCTQuant(data, fdtbl) {\r\n        var d0, d1, d2, d3, d4, d5, d6, d7;\r\n        /* Pass 1: process rows. */\r\n        var dataOff = 0;\r\n        var i;\r\n        var I8 = 8;\r\n        var I64 = 64;\r\n        for (i = 0; i < I8; ++i) {\r\n            d0 = data[dataOff];\r\n            d1 = data[dataOff + 1];\r\n            d2 = data[dataOff + 2];\r\n            d3 = data[dataOff + 3];\r\n            d4 = data[dataOff + 4];\r\n            d5 = data[dataOff + 5];\r\n            d6 = data[dataOff + 6];\r\n            d7 = data[dataOff + 7];\r\n\r\n            var tmp0 = d0 + d7;\r\n            var tmp7 = d0 - d7;\r\n            var tmp1 = d1 + d6;\r\n            var tmp6 = d1 - d6;\r\n            var tmp2 = d2 + d5;\r\n            var tmp5 = d2 - d5;\r\n            var tmp3 = d3 + d4;\r\n            var tmp4 = d3 - d4;\r\n\r\n            /* Even part */\r\n            var tmp10 = tmp0 + tmp3;\t/* phase 2 */\r\n            var tmp13 = tmp0 - tmp3;\r\n            var tmp11 = tmp1 + tmp2;\r\n            var tmp12 = tmp1 - tmp2;\r\n\r\n            data[dataOff] = tmp10 + tmp11; /* phase 3 */\r\n            data[dataOff + 4] = tmp10 - tmp11;\r\n\r\n            var z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */\r\n            data[dataOff + 2] = tmp13 + z1; /* phase 5 */\r\n            data[dataOff + 6] = tmp13 - z1;\r\n\r\n            /* Odd part */\r\n            tmp10 = tmp4 + tmp5; /* phase 2 */\r\n            tmp11 = tmp5 + tmp6;\r\n            tmp12 = tmp6 + tmp7;\r\n\r\n            /* The rotator is modified from fig 4-8 to avoid extra negations. */\r\n            var z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */\r\n            var z2 = 0.541196100 * tmp10 + z5; /* c2-c6 */\r\n            var z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */\r\n            var z3 = tmp11 * 0.707106781; /* c4 */\r\n\r\n            var z11 = tmp7 + z3;\t/* phase 5 */\r\n            var z13 = tmp7 - z3;\r\n\r\n            data[dataOff + 5] = z13 + z2;\t/* phase 6 */\r\n            data[dataOff + 3] = z13 - z2;\r\n            data[dataOff + 1] = z11 + z4;\r\n            data[dataOff + 7] = z11 - z4;\r\n\r\n            dataOff += 8; /* advance pointer to next row */\r\n        }\r\n\r\n        /* Pass 2: process columns. */\r\n        dataOff = 0;\r\n        for (i = 0; i < I8; ++i) {\r\n            d0 = data[dataOff];\r\n            d1 = data[dataOff + 8];\r\n            d2 = data[dataOff + 16];\r\n            d3 = data[dataOff + 24];\r\n            d4 = data[dataOff + 32];\r\n            d5 = data[dataOff + 40];\r\n            d6 = data[dataOff + 48];\r\n            d7 = data[dataOff + 56];\r\n\r\n            var tmp0p2 = d0 + d7;\r\n            var tmp7p2 = d0 - d7;\r\n            var tmp1p2 = d1 + d6;\r\n            var tmp6p2 = d1 - d6;\r\n            var tmp2p2 = d2 + d5;\r\n            var tmp5p2 = d2 - d5;\r\n            var tmp3p2 = d3 + d4;\r\n            var tmp4p2 = d3 - d4;\r\n\r\n            /* Even part */\r\n            var tmp10p2 = tmp0p2 + tmp3p2;\t/* phase 2 */\r\n            var tmp13p2 = tmp0p2 - tmp3p2;\r\n            var tmp11p2 = tmp1p2 + tmp2p2;\r\n            var tmp12p2 = tmp1p2 - tmp2p2;\r\n\r\n            data[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */\r\n            data[dataOff + 32] = tmp10p2 - tmp11p2;\r\n\r\n            var z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */\r\n            data[dataOff + 16] = tmp13p2 + z1p2; /* phase 5 */\r\n            data[dataOff + 48] = tmp13p2 - z1p2;\r\n\r\n            /* Odd part */\r\n            tmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */\r\n            tmp11p2 = tmp5p2 + tmp6p2;\r\n            tmp12p2 = tmp6p2 + tmp7p2;\r\n\r\n            /* The rotator is modified from fig 4-8 to avoid extra negations. */\r\n            var z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */\r\n            var z2p2 = 0.541196100 * tmp10p2 + z5p2; /* c2-c6 */\r\n            var z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */\r\n            var z3p2 = tmp11p2 * 0.707106781; /* c4 */\r\n\r\n            var z11p2 = tmp7p2 + z3p2;\t/* phase 5 */\r\n            var z13p2 = tmp7p2 - z3p2;\r\n\r\n            data[dataOff + 40] = z13p2 + z2p2; /* phase 6 */\r\n            data[dataOff + 24] = z13p2 - z2p2;\r\n            data[dataOff + 8] = z11p2 + z4p2;\r\n            data[dataOff + 56] = z11p2 - z4p2;\r\n\r\n            dataOff++; /* advance pointer to next column */\r\n        }\r\n\r\n        // Quantize/descale the coefficients\r\n        var fDCTQuant;\r\n        for (i = 0; i < I64; ++i) {\r\n            // Apply the quantization and scaling factor & Round to nearest integer\r\n            fDCTQuant = data[i] * fdtbl[i];\r\n            outputfDCTQuant[i] = (fDCTQuant > 0.0) ? ((fDCTQuant + 0.5) | 0) : ((fDCTQuant - 0.5) | 0);\r\n            //outputfDCTQuant[i] = fround(fDCTQuant);\r\n\r\n        }\r\n        return outputfDCTQuant;\r\n    }\r\n\r\n    function writeAPP0() {\r\n        writeWord(0xFFE0); // marker\r\n        writeWord(16); // length\r\n        writeByte(0x4A); // J\r\n        writeByte(0x46); // F\r\n        writeByte(0x49); // I\r\n        writeByte(0x46); // F\r\n        writeByte(0); // = \"JFIF\",'\\0'\r\n        writeByte(1); // versionhi\r\n        writeByte(1); // versionlo\r\n        writeByte(0); // xyunits\r\n        writeWord(1); // xdensity\r\n        writeWord(1); // ydensity\r\n        writeByte(0); // thumbnwidth\r\n        writeByte(0); // thumbnheight\r\n    }\r\n\r\n    function writeAPP1(exifBuffer) {\r\n        if (!exifBuffer) return;\r\n\r\n        writeWord(0xFFE1); // APP1 marker\r\n\r\n        if (exifBuffer[0] === 0x45 &&\r\n            exifBuffer[1] === 0x78 &&\r\n            exifBuffer[2] === 0x69 &&\r\n            exifBuffer[3] === 0x66) {\r\n            // Buffer already starts with EXIF, just use it directly\r\n            writeWord(exifBuffer.length + 2); // length is buffer + length itself!\r\n        } else {\r\n            // Buffer doesn't start with EXIF, write it for them\r\n            writeWord(exifBuffer.length + 5 + 2); // length is buffer + EXIF\\0 + length itself!\r\n            writeByte(0x45); // E\r\n            writeByte(0x78); // X\r\n            writeByte(0x69); // I\r\n            writeByte(0x66); // F\r\n            writeByte(0); // = \"EXIF\",'\\0'\r\n        }\r\n\r\n        for (var i = 0; i < exifBuffer.length; i++) {\r\n            writeByte(exifBuffer[i]);\r\n        }\r\n    }\r\n\r\n    function writeSOF0(width, height) {\r\n        writeWord(0xFFC0); // marker\r\n        writeWord(17);   // length, truecolor YUV JPG\r\n        writeByte(8);    // precision\r\n        writeWord(height);\r\n        writeWord(width);\r\n        writeByte(3);    // nrofcomponents\r\n        writeByte(1);    // IdY\r\n        writeByte(0x11); // HVY\r\n        writeByte(0);    // QTY\r\n        writeByte(2);    // IdU\r\n        writeByte(0x11); // HVU\r\n        writeByte(1);    // QTU\r\n        writeByte(3);    // IdV\r\n        writeByte(0x11); // HVV\r\n        writeByte(1);    // QTV\r\n    }\r\n\r\n    function writeDQT() {\r\n        writeWord(0xFFDB); // marker\r\n        writeWord(132);\t   // length\r\n        writeByte(0);\r\n        for (var i = 0; i < 64; i++) {\r\n            writeByte(YTable[i]);\r\n        }\r\n        writeByte(1);\r\n        for (var j = 0; j < 64; j++) {\r\n            writeByte(UVTable[j]);\r\n        }\r\n    }\r\n\r\n    function writeDHT() {\r\n        writeWord(0xFFC4); // marker\r\n        writeWord(0x01A2); // length\r\n\r\n        writeByte(0); // HTYDCinfo\r\n        for (var i = 0; i < 16; i++) {\r\n            writeByte(std_dc_luminance_nrcodes[i + 1]);\r\n        }\r\n        for (var j = 0; j <= 11; j++) {\r\n            writeByte(std_dc_luminance_values[j]);\r\n        }\r\n\r\n        writeByte(0x10); // HTYACinfo\r\n        for (var k = 0; k < 16; k++) {\r\n            writeByte(std_ac_luminance_nrcodes[k + 1]);\r\n        }\r\n        for (var l = 0; l <= 161; l++) {\r\n            writeByte(std_ac_luminance_values[l]);\r\n        }\r\n\r\n        writeByte(1); // HTUDCinfo\r\n        for (var m = 0; m < 16; m++) {\r\n            writeByte(std_dc_chrominance_nrcodes[m + 1]);\r\n        }\r\n        for (var n = 0; n <= 11; n++) {\r\n            writeByte(std_dc_chrominance_values[n]);\r\n        }\r\n\r\n        writeByte(0x11); // HTUACinfo\r\n        for (var o = 0; o < 16; o++) {\r\n            writeByte(std_ac_chrominance_nrcodes[o + 1]);\r\n        }\r\n        for (var p = 0; p <= 161; p++) {\r\n            writeByte(std_ac_chrominance_values[p]);\r\n        }\r\n    }\r\n\r\n    function writeCOM(comments) {\r\n        if (typeof comments === \"undefined\" || comments.constructor !== Array) return;\r\n        comments.forEach(e => {\r\n            if (typeof e !== \"string\") return;\r\n            writeWord(0xFFFE); // marker\r\n            var l = e.length;\r\n            writeWord(l + 2); // length itself as well\r\n            var i;\r\n            for (i = 0; i < l; i++)\r\n                writeByte(e.charCodeAt(i));\r\n        });\r\n    }\r\n\r\n    function writeSOS() {\r\n        writeWord(0xFFDA); // marker\r\n        writeWord(12); // length\r\n        writeByte(3); // nrofcomponents\r\n        writeByte(1); // IdY\r\n        writeByte(0); // HTY\r\n        writeByte(2); // IdU\r\n        writeByte(0x11); // HTU\r\n        writeByte(3); // IdV\r\n        writeByte(0x11); // HTV\r\n        writeByte(0); // Ss\r\n        writeByte(0x3f); // Se\r\n        writeByte(0); // Bf\r\n    }\r\n\r\n    function processDU(CDU, fdtbl, DC, HTDC, HTAC) {\r\n        var EOB = HTAC[0x00];\r\n        var M16zeroes = HTAC[0xF0];\r\n        var pos;\r\n        var I16 = 16;\r\n        var I63 = 63;\r\n        var I64 = 64;\r\n        var DU_DCT = fDCTQuant(CDU, fdtbl);\r\n        //ZigZag reorder\r\n        for (var j = 0; j < I64; ++j) {\r\n            DU[ZigZag[j]] = DU_DCT[j];\r\n        }\r\n        var Diff = DU[0] - DC; DC = DU[0];\r\n        //Encode DC\r\n        if (Diff == 0) {\r\n            writeBits(HTDC[0]); // Diff might be 0\r\n        } else {\r\n            pos = 32767 + Diff;\r\n            writeBits(HTDC[category[pos]]);\r\n            writeBits(bitcode[pos]);\r\n        }\r\n        //Encode ACs\r\n        var end0pos = 63; // was const... which is crazy\r\n        for (; (end0pos > 0) && (DU[end0pos] == 0); end0pos--) { };\r\n        //end0pos = first element in reverse order !=0\r\n        if (end0pos == 0) {\r\n            writeBits(EOB);\r\n            return DC;\r\n        }\r\n        var i = 1;\r\n        var lng;\r\n        while (i <= end0pos) {\r\n            var startpos = i;\r\n            for (; (DU[i] == 0) && (i <= end0pos); ++i) { }\r\n            var nrzeroes = i - startpos;\r\n            if (nrzeroes >= I16) {\r\n                lng = nrzeroes >> 4;\r\n                for (var nrmarker = 1; nrmarker <= lng; ++nrmarker)\r\n                    writeBits(M16zeroes);\r\n                nrzeroes = nrzeroes & 0xF;\r\n            }\r\n            pos = 32767 + DU[i];\r\n            writeBits(HTAC[(nrzeroes << 4) + category[pos]]);\r\n            writeBits(bitcode[pos]);\r\n            i++;\r\n        }\r\n        if (end0pos != I63) {\r\n            writeBits(EOB);\r\n        }\r\n        return DC;\r\n    }\r\n\r\n    function initCharLookupTable() {\r\n        var sfcc = String.fromCharCode;\r\n        for (var i = 0; i < 256; i++) { ///// ACHTUNG // 255\r\n            clt[i] = sfcc(i);\r\n        }\r\n    }\r\n\r\n    this.encode = function (image, quality) // image data object\r\n    {\r\n        var time_start = new Date().getTime();\r\n\r\n        if (quality) setQuality(quality);\r\n\r\n        // Initialize bit writer\r\n        byteout = new Array();\r\n        bytenew = 0;\r\n        bytepos = 7;\r\n\r\n        // Add JPEG headers\r\n        writeWord(0xFFD8); // SOI\r\n        writeAPP0();\r\n        writeCOM(image.comments);\r\n        writeAPP1(image.exifBuffer);\r\n        writeDQT();\r\n        writeSOF0(image.width, image.height);\r\n        writeDHT();\r\n        writeSOS();\r\n\r\n\r\n        // Encode 8x8 macroblocks\r\n        var DCY = 0;\r\n        var DCU = 0;\r\n        var DCV = 0;\r\n\r\n        bytenew = 0;\r\n        bytepos = 7;\r\n\r\n\r\n        this.encode.displayName = \"_encode_\";\r\n\r\n        var imageData = image.data;\r\n        var width = image.width;\r\n        var height = image.height;\r\n\r\n        var quadWidth = width * 4;\r\n        var tripleWidth = width * 3;\r\n\r\n        var x, y = 0;\r\n        var r, g, b;\r\n        var start, p, col, row, pos;\r\n        while (y < height) {\r\n            x = 0;\r\n            while (x < quadWidth) {\r\n                start = quadWidth * y + x;\r\n                p = start;\r\n                col = -1;\r\n                row = 0;\r\n\r\n                for (pos = 0; pos < 64; pos++) {\r\n                    row = pos >> 3;// /8\r\n                    col = (pos & 7) * 4; // %8\r\n                    p = start + (row * quadWidth) + col;\r\n\r\n                    if (y + row >= height) { // padding bottom\r\n                        p -= (quadWidth * (y + 1 + row - height));\r\n                    }\r\n\r\n                    if (x + col >= quadWidth) { // padding right\r\n                        p -= ((x + col) - quadWidth + 4)\r\n                    }\r\n\r\n                    r = imageData[p++];\r\n                    g = imageData[p++];\r\n                    b = imageData[p++];\r\n\r\n\r\n                    /* // calculate YUV values dynamically\r\n                    YDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\r\n                    UDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\r\n                    VDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\r\n                    */\r\n\r\n                    // use lookup table (slightly faster)\r\n                    YDU[pos] = ((RGB_YUV_TABLE[r] + RGB_YUV_TABLE[(g + 256) >> 0] + RGB_YUV_TABLE[(b + 512) >> 0]) >> 16) - 128;\r\n                    UDU[pos] = ((RGB_YUV_TABLE[(r + 768) >> 0] + RGB_YUV_TABLE[(g + 1024) >> 0] + RGB_YUV_TABLE[(b + 1280) >> 0]) >> 16) - 128;\r\n                    VDU[pos] = ((RGB_YUV_TABLE[(r + 1280) >> 0] + RGB_YUV_TABLE[(g + 1536) >> 0] + RGB_YUV_TABLE[(b + 1792) >> 0]) >> 16) - 128;\r\n\r\n                }\r\n\r\n                DCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\r\n                DCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\r\n                DCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\r\n                x += 32;\r\n            }\r\n            y += 8;\r\n        }\r\n\r\n\r\n        ////////////////////////////////////////////////////////////////\r\n\r\n        // Do the bit alignment of the EOI marker\r\n        if (bytepos >= 0) {\r\n            var fillbits = [];\r\n            fillbits[1] = bytepos + 1;\r\n            fillbits[0] = (1 << (bytepos + 1)) - 1;\r\n            writeBits(fillbits);\r\n        }\r\n\r\n        writeWord(0xFFD9); //EOI\r\n\r\n        if (typeof module === 'undefined') return new Uint8Array(byteout);\r\n        return Buffer.from(byteout);\r\n\r\n        var jpegDataUri = 'data:image/jpeg;base64,' + btoa(byteout.join(''));\r\n\r\n        byteout = [];\r\n\r\n        // benchmarking\r\n        var duration = new Date().getTime() - time_start;\r\n        //console.log('Encoding time: '+ duration + 'ms');\r\n        //\r\n\r\n        return jpegDataUri\r\n    }\r\n\r\n    function setQuality(quality) {\r\n        if (quality <= 0) {\r\n            quality = 1;\r\n        }\r\n        if (quality > 100) {\r\n            quality = 100;\r\n        }\r\n\r\n        if (currentQuality == quality) return // don't recalc if unchanged\r\n\r\n        var sf = 0;\r\n        if (quality < 50) {\r\n            sf = Math.floor(5000 / quality);\r\n        } else {\r\n            sf = Math.floor(200 - quality * 2);\r\n        }\r\n\r\n        initQuantTables(sf);\r\n        currentQuality = quality;\r\n        //console.log('Quality set to: '+quality +'%');\r\n    }\r\n\r\n    function init() {\r\n        var time_start = new Date().getTime();\r\n        if (!quality) quality = 50;\r\n        // Create tables\r\n        initCharLookupTable()\r\n        initHuffmanTbl();\r\n        initCategoryNumber();\r\n        initRGBYUVTable();\r\n\r\n        setQuality(quality);\r\n        var duration = new Date().getTime() - time_start;\r\n        //console.log('Initialization '+ duration + 'ms');\r\n    }\r\n\r\n    init();\r\n\r\n};\r\n\r\nexport { JPEGEncoder };\r\n\r\nerrorHandling.scriptsLoaded.JPEGEncoder = true;","import { CloakUniversal } from './CloakUniversal.js';\r\nimport { encode as pngEncode } from 'fast-png';\r\nimport { JPEGEncoder } from '../libs/JPEGEncoder.js';\r\n\r\nexport class CloakEncoder extends CloakUniversal {\r\n    constructor(defaultArguments, innerCanvasId, coverCanvasId, hiddenCanvasId, outputCanvasId, sizeLabelId, hiddenSizeLabelId) {\r\n        super(defaultArguments);\r\n        this._innerImage = null;\r\n        this._coverImage = null;\r\n        this._innerImageData = null;\r\n        this._coverImageData = null;\r\n        this._innerContrast = defaultArguments.contrast_inner;\r\n        this._coverContrast = defaultArguments.contrast_cover;\r\n        this._innerLuminance = defaultArguments.luminance_inner;\r\n        this._coverLuminance = defaultArguments.luminance_cover;\r\n\r\n        this._mirageSize = defaultArguments.mirage_size;\r\n\r\n        this._isCompress = defaultArguments.encode_compress;\r\n        this._compressQuality = defaultArguments.encode_compress_quality;\r\n\r\n        this._version = defaultArguments.version;\r\n        switch (this._version) {\r\n            case 0:\r\n                this._diff = defaultArguments.version_0.difference;\r\n                break;\r\n            case 1:\r\n                this._diff = defaultArguments.version_1.difference;\r\n                break;\r\n            case 2:\r\n                this._diff = defaultArguments.version_2.difference;\r\n                break;\r\n        }\r\n\r\n        this._hiddenFile = null;\r\n        this._fileExtension = '';\r\n        this._fileExtensionCompressed = '';\r\n        this._byteArray = null;\r\n        this._byteArrayCompressed = null;\r\n        this._outputData = null;\r\n\r\n        this._innerCanvas = document.getElementById(innerCanvasId);\r\n        this._coverCanvas = document.getElementById(coverCanvasId);\r\n        this._hiddenCanvas = document.getElementById(hiddenCanvasId);\r\n        this._outputCanvas = document.getElementById(outputCanvasId);\r\n        this._sizeLabel = document.getElementById(sizeLabelId);\r\n        this._hiddenSizeLabel = document.getElementById(hiddenSizeLabelId);\r\n\r\n        this._isAddMark = defaultArguments.add_mark;\r\n        this._markRatio = defaultArguments.mark_ratio;\r\n\r\n        this._JpegEncoder = new JPEGEncoder(this._compressQuality);\r\n\r\n        this._encoders = [\r\n            new Encoder_v0(defaultArguments), // LSB Steganography\r\n            new Encoder_v1(defaultArguments),\r\n            new Encoder_v2(defaultArguments)\r\n        ];\r\n    }\r\n\r\n    updateInnerImage = async (img) => {\r\n        this._innerImage = img;\r\n\r\n        if (this._mirageSize !== 0) {\r\n            if (this._innerImage.width > this._innerImage.height) {\r\n                this._width = this._mirageSize;\r\n                this._height = Math.ceil(this._innerImage.height * this._mirageSize / this._innerImage.width);\r\n            } else {\r\n                this._height = this._mirageSize;\r\n                this._width = Math.ceil(this._innerImage.width * this._mirageSize / this._innerImage.height);\r\n            }\r\n        } else {\r\n            this._width = this._innerImage.width;\r\n            this._height = this._innerImage.height;\r\n        }\r\n\r\n        if (this._byteArray) {\r\n            const length = await this._adjustSize();\r\n            console.log('Size to be encoded: ' + length);\r\n        }\r\n\r\n        this._innerCanvas.width = this._width;\r\n        this._innerCanvas.height = this._height;\r\n        const ctx = this._innerCanvas.getContext('2d');\r\n        ctx.drawImage(img, 0, 0, this._width, this._height);\r\n        this._innerImageData = ctx.getImageData(0, 0, this._width, this._height);\r\n        this._sizeLabel.innerHTML = `输出图像预计尺寸: ${this._width}x${this._height}`;\r\n\r\n        this.convertGray(this._innerImageData);\r\n        this.adjustImageData(this._innerCanvas, this._innerImageData, this._innerContrast, this._innerLuminance);\r\n        if (this._isAddMark) {\r\n            this.addMark(this._innerCanvas);\r\n        }\r\n        if (this._coverImageData) {\r\n            this.updateCoverImage(this._coverImage);\r\n        }\r\n    }\r\n\r\n    _adjustSize = async () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            let currLength = this._width * this._height;\r\n            let tarLength = this._encoders[this._version].getRequiredLength(this._byteArray, this._diff);\r\n\r\n            if (tarLength > currLength) { // if the hidden file is too large\r\n                let ratio = tarLength / currLength;\r\n                if (this._hiddenFile.type.startsWith('image') && !this._hiddenFile.type.startsWith('image/gif')) { // if the hidden file is a static image\r\n                    await this._drawHiddenImageOnCanvas();\r\n                    if (this._isCompress) {\r\n                        let hiddenImageData = this._hiddenCanvas.getContext('2d').getImageData(0, 0, this._hiddenCanvas.width, this._hiddenCanvas.height);\r\n                        if (hiddenImageData) { // if get image data successfully, try to compress the hidden image by converting it to jpeg\r\n                            let jpegData = this._JpegEncoder.encode(hiddenImageData, this._compressQuality);\r\n                            tarLength = this._encoders[this._version].getRequiredLength(jpegData, this._diff); // get target length after compression\r\n                            ratio = tarLength / currLength;\r\n                            if (ratio > 1) { // if the hidden image is still too large after compression, resize it\r\n                                ratio = Math.sqrt(ratio);\r\n                                this._hiddenCanvas.width = Math.ceil(this._hiddenCanvas.width * ratio);\r\n                                this._hiddenCanvas.height = Math.ceil(this._hiddenCanvas.height * ratio);\r\n\r\n                                await this._drawHiddenImageOnCanvas(1 / ratio);\r\n                                const ctx = this._hiddenCanvas.getContext('2d');\r\n                                hiddenImageData = ctx.getImageData(0, 0, this._hiddenCanvas.width, this._hiddenCanvas.height);\r\n                                jpegData = this._JpegEncoder.encode(hiddenImageData, this._compressQuality);\r\n\r\n                                tarLength = this._encoders[this._version].getRequiredLength(jpegData, this._diff); // update target length\r\n                                ratio = tarLength / currLength; // update ratio\r\n                                if (ratio > 1) { // if the hidden image is still too large after resizing, scale the size of the inner image\r\n                                    this._scaleSize(ratio);\r\n                                }\r\n                            }\r\n                            this._hiddenSizeLabel.innerHTML = `隐藏图像尺寸: ${this._hiddenCanvas.width}x${this._hiddenCanvas.height}`;\r\n                            this._byteArrayCompressed = jpegData;\r\n                            this._fileExtensionCompressed = 'jpg'; // change file extension to jpg\r\n                            resolve(this._byteArrayCompressed.length);\r\n                            return;\r\n                        }\r\n                    }\r\n                    this._hiddenSizeLabel.innerHTML = `隐藏图像尺寸: ${this._hiddenCanvas.width}x${this._hiddenCanvas.height}`;\r\n                } else { // if the hidden file is not an image, not compressible\r\n                    this._hiddenSizeLabel.innerHTML = '';\r\n                    this._byteArrayCompressed = null;\r\n                    this._fileExtensionCompressed = '';\r\n                }\r\n                this._scaleSize(ratio);\r\n                resolve(this._byteArray.length);\r\n                return;\r\n            } else {\r\n                this._byteArrayCompressed = null;\r\n                this._fileExtensionCompressed = '';\r\n                resolve(this._byteArray.length);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    _scaleSize = (ratio) => {\r\n        ratio = Math.sqrt(ratio);\r\n        this._width = Math.ceil(this._width * ratio);\r\n        this._height = Math.ceil(this._height * ratio);\r\n    }\r\n\r\n    updateCoverImage(img) {\r\n        this._coverImage = img;\r\n        if (this._innerImage) {\r\n            const currRatio = img.width / img.height;\r\n            const tarRatio = this._width / this._height;\r\n            let startx, starty, newWidth, newHeight;\r\n            if (currRatio < tarRatio) {\r\n                startx = 0;\r\n                starty = Math.ceil((this._height - this._width / currRatio) / 2);\r\n                newWidth = this._width;\r\n                newHeight = Math.ceil(this._width / currRatio);\r\n            } else {\r\n                startx = Math.ceil((this._width - this._height * currRatio) / 2);\r\n                starty = 0;\r\n                newWidth = Math.ceil(this._height * currRatio);\r\n                newHeight = this._height;\r\n            }\r\n            this._coverCanvas.width = this._width;\r\n            this._coverCanvas.height = this._height;\r\n            const ctx = this._coverCanvas.getContext('2d');\r\n            ctx.drawImage(img, startx, starty, newWidth, newHeight);\r\n            this._coverImageData = ctx.getImageData(0, 0, this._width, this._height);\r\n        } else {\r\n            this._coverCanvas.width = img.width;\r\n            this._coverCanvas.height = img.height;\r\n            const ctx = this._coverCanvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            this._coverImageData = ctx.getImageData(0, 0, img.width, img.height);\r\n        }\r\n        this.convertGray(this._coverImageData);\r\n        this.adjustImageData(this._coverCanvas, this._coverImageData, this._coverContrast, this._coverLuminance);\r\n        if (this._isAddMark) {\r\n            this.addMark(this._coverCanvas);\r\n        }\r\n    }\r\n\r\n    updateHiddenFile = async (file) => {\r\n        this._hiddenFile = file;\r\n        this._byteArrayCompressed = null;\r\n\r\n        const fileName = file.name;\r\n        const dotIndex = fileName.lastIndexOf('.');\r\n        if (dotIndex !== -1 && dotIndex < fileName.length - 1) {\r\n            this._fileExtension = fileName.substring(dotIndex + 1).toLowerCase();\r\n            if (this._fileExtension.length > 10) {\r\n                alert('文件拓展名过长，已截断为: ' + this._fileExtension.substring(0, 10));\r\n                this._fileExtension = this._fileExtension.substring(0, 10);\r\n            }\r\n        } else {\r\n            this._fileExtension = '';\r\n        }\r\n\r\n        if (file.type.startsWith('image/') && !file.type.startsWith('image/gif')) {\r\n            await this._drawHiddenImageOnCanvas();\r\n            this._hiddenSizeLabel.innerHTML = `隐藏图像尺寸: ${this._hiddenCanvas.width}x${this._hiddenCanvas.height}`;\r\n            this._getHiddenByteArray();\r\n        } else {\r\n            this._hiddenSizeLabel.innerHTML = '';\r\n            this.showTextOnCanvas(this._hiddenCanvas, '暂不支持预览此文件', file.type ? '文件类型: ' + file.type : '');\r\n            this._getHiddenByteArray();\r\n        }\r\n    }\r\n\r\n    _getHiddenByteArray = () => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const arrayBuffer = event.target.result;\r\n            this._byteArray = new Uint8Array(arrayBuffer);\r\n            if (this._innerImage) {\r\n                this.updateInnerImage(this._innerImage);\r\n            }\r\n        }\r\n        reader.readAsArrayBuffer(this._hiddenFile);\r\n    }\r\n\r\n    _drawHiddenImageOnCanvas = async (scaleRatio = 1) => {\r\n        const img = new Image();\r\n        await new Promise((resolve, reject) => {\r\n            img.onload = () => {\r\n                this.clearCanvas(this._hiddenCanvas);\r\n                this._hiddenCanvas.width = img.width * scaleRatio;\r\n                this._hiddenCanvas.height = img.height * scaleRatio;\r\n                const ctx = this._hiddenCanvas.getContext('2d');\r\n                ctx.drawImage(img, 0, 0, this._hiddenCanvas.width, this._hiddenCanvas.height);\r\n                URL.revokeObjectURL(img.src);\r\n                resolve();\r\n            };\r\n            img.onerror = reject;\r\n            img.src = URL.createObjectURL(this._hiddenFile);\r\n        });\r\n    }\r\n\r\n    process = () => {\r\n        if (!this._innerImageData || !this._coverImageData || !this._byteArray) {\r\n            throw new Error('请先选择图像和文件！');\r\n        }\r\n\r\n        this.showTextOnCanvas(this._outputCanvas, '正在处理，请稍候...');\r\n\r\n        const innerImageDataAdjust = this._innerCanvas.getContext('2d').getImageData(0, 0, this._width, this._height);\r\n        const coverImageDataAdjust = this._coverCanvas.getContext('2d').getImageData(0, 0, this._width, this._height);\r\n\r\n        console.log('Encoding...');\r\n        console.log('    Version: ' + this._version);\r\n        console.log('    Output size: ' + this._width + 'x' + this._height);\r\n        console.log('    Size to be encoded: ' + ((this._isCompress && this._byteArrayCompressed) ? this._byteArrayCompressed.length : this._byteArray.length));\r\n        console.log('    File extension: ' + ((this._isCompress && this._fileExtensionCompressed) ? this._fileExtensionCompressed : this._fileExtension));\r\n        console.log('    Difference: ' + this._diff);\r\n\r\n        this._outputData = this._encoders[this._version].encode(\r\n            innerImageDataAdjust,\r\n            coverImageDataAdjust,\r\n            (this._isCompress && this._byteArrayCompressed) ? this._byteArrayCompressed : this._byteArray,\r\n            (this._isCompress && this._fileExtensionCompressed) ? this._fileExtensionCompressed : this._fileExtension,\r\n            this._diff\r\n        );\r\n\r\n        this._outputCanvas.width = this._width;\r\n        this._outputCanvas.height = this._height;\r\n        const imgData = new ImageData(this._outputData, this._width, this._height);\r\n        this._outputCanvas.getContext('2d').putImageData(imgData, 0, 0);\r\n        this._isOutputCanvasCleared = false;\r\n\r\n        console.log('Encoding finished');\r\n    }\r\n\r\n    convertGray = (imgData) => {\r\n        const data = imgData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            const gray = data[i] * 0.299 + data[i + 1] * 0.587 + data[i + 2] * 0.114;\r\n            data[i] = gray;\r\n            data[i + 1] = gray;\r\n            data[i + 2] = gray;\r\n        }\r\n    }\r\n\r\n    adjustInnerContrast = (contrast) => {\r\n        this._innerContrast = contrast;\r\n        if (this._innerImageData) {\r\n            this.adjustImageData(this._innerCanvas, this._innerImageData, contrast, this._innerLuminance);\r\n            if (this._isAddMark) {\r\n                this.addMark(this._innerCanvas);\r\n            }\r\n        }\r\n    }\r\n\r\n    adjustCoverContrast = (contrast) => {\r\n        this._coverContrast = contrast;\r\n        if (this._coverImageData) {\r\n            this.adjustImageData(this._coverCanvas, this._coverImageData, contrast, this._coverLuminance);\r\n            if (this._isAddMark) {\r\n                this.addMark(this._coverCanvas);\r\n            }\r\n        }\r\n    }\r\n\r\n    adjustInnerLuminance = (luminance) => {\r\n        this._innerLuminance = luminance;\r\n        if (this._innerImageData) {\r\n            this.adjustImageData(this._innerCanvas, this._innerImageData, this._innerContrast, luminance);\r\n            if (this._isAddMark) {\r\n                this.addMark(this._innerCanvas);\r\n            }\r\n        }\r\n    }\r\n\r\n    adjustCoverLuminance = (luminance) => {\r\n        this._coverLuminance = luminance;\r\n        if (this._coverImageData) {\r\n            this.adjustImageData(this._coverCanvas, this._coverImageData, this._coverContrast, luminance);\r\n            if (this._isAddMark) {\r\n                this.addMark(this._coverCanvas);\r\n            }\r\n        }\r\n    }\r\n\r\n    saveOutputImage = () => {\r\n        if (!this._outputData) {\r\n            throw new Error('请先处理图像！');\r\n        }\r\n        const timestamp = new Date().getTime();\r\n        const link = document.createElement('a');\r\n\r\n        const pngBlob = new Blob([pngEncode({\r\n            width: this._width,\r\n            height: this._height,\r\n            data: this._outputData\r\n        })], { type: 'image/png' });\r\n\r\n        link.href = URL.createObjectURL(pngBlob);\r\n        link.download = `encoded_${timestamp}.png`;\r\n\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n\r\n        URL.revokeObjectURL(link.href);\r\n    }\r\n\r\n    setIsAddMark = (isAddMark) => {\r\n        this._isAddMark = isAddMark;\r\n        if (isAddMark) {\r\n            if (this._innerImageData) {\r\n                this.addMark(this._innerCanvas);\r\n            }\r\n            if (this._coverImageData) {\r\n                this.addMark(this._coverCanvas);\r\n            }\r\n        } else {\r\n            if (this._innerImageData) {\r\n                this.adjustImageData(this._innerCanvas, this._innerImageData, this._innerContrast, this._innerLuminance);\r\n            }\r\n            if (this._coverImageData) {\r\n                this.adjustImageData(this._coverCanvas, this._coverImageData, this._coverContrast, this._coverLuminance);\r\n            }\r\n        }\r\n    }\r\n\r\n    addMark(canvas, markImage) {\r\n        if (!markImage) {\r\n            if (applicationState.markImage) {\r\n                markImage = applicationState.markImage;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        let width = canvas.width * this._markRatio;\r\n        let height = canvas.height * this._markRatio;\r\n        const currRatio = width / height;\r\n        const markRatio = markImage.width / markImage.height;\r\n        if (currRatio > markRatio) {\r\n            width = height * markRatio;\r\n        } else {\r\n            height = width / markRatio;\r\n        }\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(markImage, 0, 0, width, height);\r\n    }\r\n\r\n    setMirageSize = (size) => {\r\n        this._mirageSize = size;\r\n        if (this._innerImage) {\r\n            this.updateInnerImage(this._innerImage); // update inner image to adjust size\r\n        }\r\n    }\r\n\r\n    setDiff = (diff) => {\r\n        this._diff = diff;\r\n        if (this._version === 0 && this._byteArray && this._innerImage) {\r\n            this.updateInnerImage(this._innerImage); // only when using LSB diff can affect the required size\r\n        }\r\n    }\r\n\r\n    setVersion = (version) => {\r\n        this._version = version;\r\n        if (this._byteArray && this._innerImage) {\r\n            this.updateInnerImage(this._innerImage); // update inner image to adjust size\r\n        }\r\n    }\r\n\r\n    setIsCompress = async (isCompress) => {\r\n        this._isCompress = isCompress;\r\n        if (this._byteArray && this._innerImage) {\r\n            this.updateInnerImage(this._innerImage); // update inner image to adjust size\r\n        }\r\n    }\r\n\r\n    clearOutputCanvas = () => {\r\n        if (!this._isOutputCanvasCleared) {\r\n            this.clearCanvas(this._outputCanvas);\r\n            this._isOutputCanvasCleared = true;\r\n            this._outputData = null;\r\n        }\r\n    }\r\n}\r\n\r\nclass Encoder_v1 {\r\n    constructor(defaultArguments) {\r\n        this._version = 1;\r\n        this._globalDefaultDiff = defaultArguments.default_difference;\r\n        this._defaultDiff = defaultArguments.version_1.default_difference;\r\n\r\n        this._remained = defaultArguments.version_1.remained;\r\n        this._padding = defaultArguments.version_1.padding;\r\n\r\n        this._scale_i = defaultArguments.version_1.scale_inner;\r\n        this._offset_i = defaultArguments.version_1.offset_inner;\r\n        this._scale_c = defaultArguments.version_1.scale_cover;\r\n        this._offset_c = defaultArguments.version_1.offset_cover;\r\n    }\r\n\r\n    encode(innerImageData, coverImageData, hiddenFile, fileExtensionName, customDiff, writeVersion = 1) {\r\n        this._innerData = innerImageData.data;\r\n        this._coverData = coverImageData.data;\r\n        this._width = innerImageData.width;\r\n        this._height = innerImageData.height;\r\n        this._pixelRange = writeVersion === 1 ? this._innerData.length >> 2 : 3;\r\n\r\n        if (writeVersion === 1 && this._pixelRange < this.getRequiredLength(hiddenFile)) {\r\n            throw new Error('可用像素过少，编码空间不足！');\r\n        }\r\n\r\n        this._version = writeVersion;\r\n        let outputData = new Uint8ClampedArray(this._innerData.length);\r\n        this._byteArray = hiddenFile;\r\n        this._targetSize = this._byteArray.length;\r\n        this._fileExtension = fileExtensionName;\r\n        this._diff = customDiff || this._defaultDiff;\r\n\r\n        for (let i = 0; i < this._pixelRange; i++) {\r\n            const diff = (i < 3) ? this._globalDefaultDiff : // encoding method for \"version\" are globally fixed\r\n                ((i < 6) ? this._defaultDiff : // encoding method for \"threshold\" are for each version fixed\r\n                    this._diff); // otherwise use customized differece to encode\r\n            if (this._isInner(i)) {\r\n                const gray = this._scale(this._innerData[i * 4], this._scale_i, this._offset_i);\r\n                const { r, g, b } = this._getBits(i);\r\n                outputData[i * 4] = r ? 255 - diff : 255;\r\n                outputData[i * 4 + 1] = g ? 255 - diff : 255;\r\n                outputData[i * 4 + 2] = b ? 255 - diff : 255;\r\n                outputData[i * 4 + 3] = gray;\r\n            } else {\r\n                const gray = this._scale(this._coverData[i * 4], this._scale_c, this._offset_c);\r\n                const { r, g, b } = this._getBits(i);\r\n                outputData[i * 4] = r ? diff : 0;\r\n                outputData[i * 4 + 1] = g ? diff : 0;\r\n                outputData[i * 4 + 2] = b ? diff : 0;\r\n                outputData[i * 4 + 3] = 255 - gray;\r\n            }\r\n        }\r\n\r\n        return outputData;\r\n    }\r\n\r\n    getRequiredLength(hiddenFile) {\r\n        return (hiddenFile.length + this._remained + this._padding) * 3;\r\n    }\r\n\r\n    _getBits = (pixelIndex) => {\r\n        const pixelIndexMod3 = pixelIndex % 3;\r\n        const byteIndex = Math.floor(pixelIndex / 3);\r\n\r\n        if (byteIndex === 0) { // version\r\n            return this._getBitsFromByte(this._version, pixelIndexMod3);\r\n        } else if (byteIndex === 1) { // threshold\r\n            return this._getBitsFromByte(Math.floor(this._diff / 2), pixelIndexMod3);\r\n        } else if (byteIndex <= 5) { // length\r\n            return this._getBitsFromByte(\r\n                (this._targetSize >> ((byteIndex - 2) << 3)) & 0xff,\r\n                pixelIndexMod3);\r\n        } else if (byteIndex < this._remained) { // file extension name\r\n            return byteIndex - 6 < this._fileExtension.length ?\r\n                this._getBitsFromByte(this._fileExtension.charCodeAt(byteIndex - 6), pixelIndexMod3) :\r\n                this._getBitsFromByte(0, pixelIndexMod3);\r\n        } else if (byteIndex < this._targetSize + this._remained) { // data\r\n            return this._getBitsFromByte(this._byteArray[byteIndex - this._remained], pixelIndexMod3);\r\n        } else { // random padding\r\n            return this._getRandomBits();\r\n        }\r\n    }\r\n\r\n    _scale = (value, scale, offset) => {\r\n        return Math.floor(value * scale + offset);\r\n    }\r\n\r\n    _isInner = (pixelIndex) => {\r\n        return (pixelIndex % this._width + Math.floor(pixelIndex / this._width)) % 2 === 0;\r\n    }\r\n\r\n    _getBitsFromByte = (origByte, pixelIndex) => {\r\n        const byte = origByte >> (pixelIndex * 3);\r\n        const r = byte & 1;\r\n        const g = (byte >> 1) & 1;\r\n        if (pixelIndex != 2) {\r\n            return {\r\n                r: r,\r\n                g: g,\r\n                b: (byte >> 2) & 1\r\n            };\r\n        } else {\r\n            return {\r\n                r: r,\r\n                g: g,\r\n                b: this._calParityBit(origByte)\r\n            };\r\n        }\r\n    }\r\n\r\n    _getRandomBits = () => {\r\n        return {\r\n            r: Math.random() > 0.5 ? 1 : 0,\r\n            g: Math.random() > 0.5 ? 1 : 0,\r\n            b: Math.random() > 0.5 ? 1 : 0\r\n        };\r\n    }\r\n\r\n    _calParityBit = (byte) => {\r\n        let parity = 0;\r\n        for (let i = 0; i < 8; i++) {\r\n            parity ^= (byte >> i) & 1;\r\n        }\r\n        return parity;\r\n    }\r\n}\r\n\r\nclass Encoder_v2 extends Encoder_v1 {\r\n    constructor(defaultArguments) {\r\n        super(defaultArguments);\r\n        this._version = 2;\r\n        this._defaultDiff = defaultArguments.version_2.default_difference; // for diff encoding\r\n\r\n        this._remained = defaultArguments.version_2.remained;\r\n        this._padding = defaultArguments.version_2.padding;\r\n\r\n        this._scale_i = defaultArguments.version_2.scale_inner;\r\n        this._offset_i = defaultArguments.version_2.offset_inner;\r\n        this._scale_c = defaultArguments.version_2.scale_cover;\r\n        this._offset_c = defaultArguments.version_2.offset_cover;\r\n    }\r\n\r\n    getRequiredLength(hiddenFile) {\r\n        return (hiddenFile.length >> 1 + this._remained + this._padding) * 3;\r\n    }\r\n\r\n    encode(innerImageData, coverImageData, hiddenFile, fileExtensionName, customDiff) {\r\n        let outputData = super.encode(innerImageData, coverImageData, hiddenFile, fileExtensionName, undefined, this._version); // use version 1 to encode version infomation\r\n        this._diff = customDiff;\r\n        this._pixelRange = innerImageData.data.length >> 2;\r\n\r\n        if (this._pixelRange < this.getRequiredLength(hiddenFile)) {\r\n            throw new Error('可用像素过少，编码空间不足！');\r\n        }\r\n\r\n        if (this._targetSize & 1) {\r\n            let newByteArray = new Uint8Array(this._targetSize + 1);\r\n            newByteArray.set(this._byteArray);\r\n            newByteArray[this._targetSize] = 0;\r\n            this._byteArray = newByteArray;\r\n        }\r\n        for (let i = 3; i < this._pixelRange; i++) {\r\n            const diff = Math.floor(((i < 6) ? this._defaultDiff : this._diff) / 3); // use defaultDiff to encode threshold\r\n            if (this._isInner(i)) {\r\n                const gray = this._scale(this._innerData[i * 4], this._scale_i, this._offset_i);\r\n                const { r, g, b } = this._getBitsPair(i);\r\n                outputData[i * 4] = 255 - diff * r;\r\n                outputData[i * 4 + 1] = 255 - diff * g;\r\n                outputData[i * 4 + 2] = 255 - diff * b;\r\n                outputData[i * 4 + 3] = gray;\r\n            } else {\r\n                const gray = this._scale(this._coverData[i * 4], this._scale_c, this._offset_c);\r\n                const { r, g, b } = this._getBitsPair(i);\r\n                outputData[i * 4] = diff * r;\r\n                outputData[i * 4 + 1] = diff * g;\r\n                outputData[i * 4 + 2] = diff * b;\r\n                outputData[i * 4 + 3] = 255 - gray;\r\n            }\r\n        }\r\n        return outputData;\r\n    }\r\n\r\n    _getBitsPair = (pixelIndex) => {\r\n        const pixelIndexMod3 = pixelIndex % 3;\r\n        const bytePairIndex = Math.floor(pixelIndex / 3);\r\n\r\n        if (bytePairIndex < 2) { // threshold\r\n            return this._getBitsFromBytePair(Math.floor(this._diff / 6), pixelIndexMod3);\r\n        } else if (bytePairIndex < 4) { // length\r\n            return this._getBitsFromBytePair(\r\n                (this._targetSize >> ((bytePairIndex - 2) << 4)) & 0xffff,\r\n                pixelIndexMod3);\r\n        } else if (bytePairIndex < this._remained) {\r\n            return bytePairIndex - 4 < this._fileExtension.length ?\r\n                this._getBitsFromBytePair(this._fileExtension.charCodeAt(bytePairIndex - 4), pixelIndexMod3) :\r\n                this._getBitsFromByte(0, pixelIndexMod3);\r\n        } else if (bytePairIndex < Math.ceil(this._targetSize / 2) + this._remained) { // data\r\n            return this._getBitsFromBytePair(\r\n                this._byteArray[(bytePairIndex - this._remained) << 1] |\r\n                (this._byteArray[((bytePairIndex - this._remained) << 1) + 1] << 8),\r\n                pixelIndexMod3);\r\n        } else { // random padding\r\n            return this._getRandomBits();\r\n        }\r\n    }\r\n\r\n    _getBitsFromBytePair = (origBytePair, pixelIndex) => {\r\n        const byte = origBytePair >> (pixelIndex * 6);\r\n        const r = byte & 3;\r\n        const g = (byte >> 2) & 3;\r\n        if (pixelIndex != 2) {\r\n            return {\r\n                r: r,\r\n                g: g,\r\n                b: (byte >> 4) & 3\r\n            };\r\n        } else {\r\n            return {\r\n                r: r,\r\n                g: g,\r\n                b: this._calParityBitPair(origBytePair)\r\n            };\r\n        }\r\n    }\r\n\r\n    _calParityBitPair = (bytePair) => {\r\n        let parity = 0;\r\n        for (let i = 0; i < 8; i++) {\r\n            parity ^= (bytePair >> i) & 1;\r\n        }\r\n        for (let i = 8; i < 16; i++) {\r\n            parity ^= ((bytePair >> i) & 1) << 1;\r\n        }\r\n        return parity;\r\n    }\r\n\r\n    _getRandomBits = () => {\r\n        return {\r\n            r: Math.floor(Math.random() * 4),\r\n            g: Math.floor(Math.random() * 4),\r\n            b: Math.floor(Math.random() * 4)\r\n        };\r\n    }\r\n}\r\n\r\nclass Encoder_v0 { // typical LSB Steganography, also works with mirage images :)\r\n    constructor(defaultArguments) {\r\n        this._defaultDiff = defaultArguments.version_0.default_difference;\r\n        this._padding = defaultArguments.version_0.padding;\r\n\r\n        this._scale_i = defaultArguments.version_0.scale_inner;\r\n        this._offset_i = defaultArguments.version_0.offset_inner;\r\n        this._scale_c = defaultArguments.version_0.scale_cover;\r\n        this._offset_c = defaultArguments.version_0.offset_cover;\r\n    }\r\n\r\n    encode = (innerImageData, coverImageData, hiddenFile, fileExtensionName, customDiff) => {\r\n        const innerData = innerImageData.data;\r\n        const coverData = coverImageData.data;\r\n        const width = innerImageData.width;\r\n        const pixelRange = innerData.length >> 2;\r\n        this._targetSize = hiddenFile.length;\r\n        this._compress = this._calCompress(customDiff || this._defaultDiff);\r\n        let outputData = new Uint8ClampedArray(innerData.length);\r\n\r\n        outputData[0] = 0xf8;\r\n        outputData[1] = 0xfb;\r\n        outputData[2] = 0xf8 | this._compress;\r\n        outputData[3] = this._scaleInner(innerData[0]);\r\n\r\n        this._byteArray = [];\r\n        this._byteArray.push(...this._targetSize.toString().split('').map(c => c.charCodeAt(0)));\r\n        this._byteArray.push(1);\r\n        this._byteArray.push(...('mtc.' + fileExtensionName).split('').map(c => c.charCodeAt(0)));\r\n        this._byteArray.push(1);\r\n        this._byteArray.push(...CloakUniversal.classifyFileType(fileExtensionName).split('').map(c => c.charCodeAt(0)));\r\n        this._byteArray.push(0);\r\n        this._fileArray = hiddenFile;\r\n        if (this._byteArray.length > this._padding) {\r\n            throw new Error('头部信息过长！可尝试更改文件拓展名。');\r\n        }\r\n\r\n        this._bytePos = 0, this._buffer = 0, this._bufferSize = 0;\r\n        const baseInner = 255 & ~((1 << this._compress) - 1);\r\n        for (let pixelIndex = 1; pixelIndex < pixelRange; pixelIndex++) {\r\n            const isInner = (pixelIndex % width + Math.floor(pixelIndex / width)) % 2 === 0;\r\n            outputData[4 * pixelIndex] = isInner ? baseInner | this._popBits() : this._popBits();\r\n            outputData[4 * pixelIndex + 1] = isInner ? baseInner | this._popBits() : this._popBits();\r\n            outputData[4 * pixelIndex + 2] = isInner ? baseInner | this._popBits() : this._popBits();\r\n            outputData[4 * pixelIndex + 3] = isInner ? this._scaleInner(innerData[4 * pixelIndex]) : 255 - this._scaleCover(coverData[4 * pixelIndex]);\r\n        }\r\n\r\n        if (this._bytePos < this._byteArray.length + this._targetSize) {\r\n            throw new Error('可用像素过少，编码空间不足！');\r\n        }\r\n\r\n        return outputData;\r\n    }\r\n\r\n    getRequiredLength = (hiddenFile, diff) => {\r\n        const compress = this._calCompress(diff);\r\n        return Math.ceil(((this._padding + hiddenFile.length) << 3) / compress / 3) + 1;\r\n    }\r\n\r\n    _calCompress = (diff) => {\r\n        return Math.min(Math.max(Math.floor(diff / 10), 1), 7);\r\n    }\r\n\r\n    _pushByte = () => {\r\n        const byte = this._bytePos < this._byteArray.length ?\r\n            this._byteArray[this._bytePos] :\r\n            (this._bytePos < this._byteArray.length + this._targetSize ?\r\n                this._fileArray[this._bytePos - this._byteArray.length] :\r\n                Math.floor(Math.random() * 256));\r\n        this._bytePos++;\r\n        this._buffer = (this._buffer << 8) | byte;\r\n        this._bufferSize += 8;\r\n    }\r\n\r\n    _popBits = () => {\r\n        if (this._bufferSize < this._compress) {\r\n            this._pushByte();\r\n        }\r\n        const bits = (this._buffer & (((1 << this._compress) - 1) << (this._bufferSize - this._compress))) >> (this._bufferSize - this._compress);\r\n        this._bufferSize -= this._compress;\r\n        this._buffer &= (1 << this._bufferSize) - 1;\r\n        return bits;\r\n    }\r\n\r\n    _scaleInner = (value) => {\r\n        return Math.floor(value * this._scale_i + this._offset_i);\r\n    }\r\n\r\n    _scaleCover = (value) => {\r\n        return Math.floor(value * this._scale_c + this._offset_c);\r\n    }\r\n}\r\n\r\nerrorHandling.scriptsLoaded.CloakEncoder = true;","const mimeTypes = {\r\n    'html': 'text/html',\r\n    'css': 'text/css',\r\n    'png': 'image/png',\r\n    'jpg': 'image/jpeg',\r\n    'jpeg': 'image/jpeg',\r\n    'bmp': 'image/bmp',\r\n    'webp': 'image/webp',\r\n    'mp3': 'audio/mpeg',\r\n    'wav': 'audio/wav',\r\n    'ogg': 'audio/ogg',\r\n    'mp4': 'video/mp4',\r\n    'webm': 'video/webm',\r\n    'flv': 'video/x-flv',\r\n    'gif': 'image/gif',\r\n    'svg': 'image/svg+xml',\r\n    'pdf': 'application/pdf',\r\n    'txt': 'text/plain'\r\n};\r\n\r\nexport class CloakUniversal {\r\n    constructor(defaultArguments) { }\r\n\r\n    static classifyFileType = (extension) => {\r\n        if (mimeTypes.hasOwnProperty(extension)) {\r\n            return mimeTypes[extension];\r\n        } else {\r\n            return 'application/octet-stream';\r\n        }\r\n    }\r\n\r\n    showResult(canvas, dataUrl, fileExtention) {\r\n        switch (fileExtention) {\r\n            case 'png':\r\n            case 'jpg':\r\n            case 'jpeg':\r\n            case 'bmp':\r\n            case 'webp':\r\n                const img = new Image();\r\n                img.onload = () => {\r\n                    this.clearCanvas(canvas);\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    canvas.getContext('2d').drawImage(img, 0, 0);\r\n                };\r\n                img.src = dataUrl;\r\n                break;\r\n            default:\r\n                if (fileExtention) {\r\n                    this.showTextOnCanvas(canvas, '暂不支持预览此文件', '文件拓展名: ' + fileExtention);\r\n                } else {\r\n                    this.showTextOnCanvas(canvas, '暂不支持预览此文件');\r\n                }\r\n        }\r\n    }\r\n\r\n    showTextOnCanvas(canvas, text = '暂不支持预览此文件', additionalText = '') {\r\n        this.clearCanvas(canvas);\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.font = '15px Microsoft Yahei';\r\n        ctx.fillStyle = getComputedStyle(document.documentElement).getPropertyValue('--front-color');\r\n        ctx.textAlign = 'center';\r\n        if (!additionalText) {\r\n            ctx.fillText(text, canvas.width / 2, canvas.height / 2);\r\n        }\r\n        else {\r\n            ctx.fillText(text, canvas.width / 2, canvas.height / 2 - 10);\r\n            ctx.fillText(additionalText, canvas.width / 2, canvas.height / 2 + 10)\r\n        }\r\n    }\r\n\r\n    cloneImageData(imageData) {\r\n        let ret = new ImageData(new Uint8ClampedArray(imageData.data), imageData.width, imageData.height);\r\n        console.log(ret);\r\n        console.log(ret.data);\r\n        console.log(imageData.data);\r\n        return ret;\r\n    }\r\n\r\n    truncate(value) {\r\n        return Math.min(255, Math.max(0, value));\r\n    }\r\n\r\n    adjustImageData(canvas, imageData, contrast, luminance) {\r\n        let data = new Uint8ClampedArray(imageData.data.length);\r\n        const oldData = imageData.data;\r\n\r\n        contrast = (contrast - 50) * 5.1;\r\n        const factor = (259 * (contrast + 255)) / (255 * (259 - contrast));\r\n        const offset = luminance * 3 - 150;\r\n\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            data[i] = this.truncate(factor * (oldData[i] - 128) + 128 + offset);\r\n            data[i + 1] = this.truncate(factor * (oldData[i + 1] - 128) + 128 + offset);\r\n            data[i + 2] = this.truncate(factor * (oldData[i + 2] - 128) + 128 + offset);\r\n            data[i + 3] = 255;\r\n        }\r\n\r\n        const newImageData = new ImageData(data, imageData.width, imageData.height);\r\n        canvas.width = newImageData.width;\r\n        canvas.height = newImageData.height;\r\n        canvas.getContext('2d').putImageData(newImageData, 0, 0);\r\n    }\r\n\r\n    saveResultFromUrl(dataUrl, fileExtension) {\r\n        const timestamp = new Date().getTime();\r\n        const link = document.createElement('a');\r\n        link.href = dataUrl;\r\n        link.download = `decoded_${timestamp}.${fileExtension}`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    clearCanvas(canvas) {\r\n        canvas.width = 300;\r\n        canvas.height = 150;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    getImageDataFromImage(image) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(image, 0, 0);\r\n        return ctx.getImageData(0, 0, image.width, image.height);\r\n    }\r\n}\r\n\r\nerrorHandling.scriptsLoaded.CloakUniversal = true;"],"names":["JPEGEncoder","quality","Math","round","YDC_HT","UVDC_HT","YAC_HT","UVAC_HT","currentQuality","ffloor","floor","YTable","Array","UVTable","fdtbl_Y","fdtbl_UV","bitcode","category","outputfDCTQuant","DU","byteout","bytenew","bytepos","YDU","UDU","VDU","clt","RGB_YUV_TABLE","ZigZag","std_dc_luminance_nrcodes","std_dc_luminance_values","std_ac_luminance_nrcodes","std_ac_luminance_values","std_dc_chrominance_nrcodes","std_dc_chrominance_values","std_ac_chrominance_nrcodes","std_ac_chrominance_values","computeHuffmanTbl","nrcodes","std_table","codevalue","pos_in_table","HT","k","j","writeBits","bs","value","posval","writeByte","push","writeWord","processDU","CDU","fdtbl","DC","HTDC","HTAC","pos","EOB","M16zeroes","DU_DCT","data","d0","d1","d2","d3","d4","d5","d6","d7","i","fDCTQuant","dataOff","tmp0","tmp7","tmp1","tmp6","tmp2","tmp5","tmp3","tmp4","tmp10","tmp13","tmp11","tmp12","z1","z5","z2","z4","z3","z11","z13","tmp0p2","tmp7p2","tmp1p2","tmp6p2","tmp2p2","tmp5p2","tmp3p2","tmp4p2","tmp10p2","tmp13p2","tmp11p2","tmp12p2","z1p2","z5p2","z2p2","z4p2","z3p2","z11p2","z13p2","Diff","end0pos","lng","startpos","nrzeroes","nrmarker","setQuality","sf","YQT","t","UVQT","u","aasf","row","col","initQuantTables","this","encode","image","comments","Date","getTime","constructor","forEach","e","l","length","charCodeAt","exifBuffer","writeAPP1","writeDQT","width","height","writeSOF0","m","n","o","p","writeDHT","DCY","DCU","DCV","displayName","x","r","g","b","start","imageData","quadWidth","y","fillbits","Buffer","from","sfcc","String","fromCharCode","initCharLookupTable","nrlower","nrupper","cat","nr","nrneg","initCategoryNumber","initRGBYUVTable","init","_regeneratorRuntime","Object","prototype","hasOwnProperty","defineProperty","Symbol","a","iterator","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","bind","_inherits","_setPrototypeOf","_defineProperty","toPrimitive","Number","_toPrimitive","errorHandling","scriptsLoaded","CloakEncoder","_CloakUniversal","defaultArguments","innerCanvasId","coverCanvasId","hiddenCanvasId","outputCanvasId","sizeLabelId","hiddenSizeLabelId","_this","_ref","_callee","img","ctx","_context","_innerImage","_mirageSize","_width","_height","ceil","_byteArray","_adjustSize","console","log","_innerCanvas","getContext","drawImage","_innerImageData","getImageData","_sizeLabel","innerHTML","concat","convertGray","adjustImageData","_innerContrast","_innerLuminance","_isAddMark","addMark","_coverImageData","updateCoverImage","_coverImage","_x","_callee3","_context3","_ref3","_callee2","reject","currLength","tarLength","ratio","hiddenImageData","jpegData","_context2","_encoders","_version","getRequiredLength","_diff","_hiddenFile","startsWith","_drawHiddenImageOnCanvas","_isCompress","_hiddenCanvas","_JpegEncoder","_compressQuality","sqrt","_scaleSize","_hiddenSizeLabel","_byteArrayCompressed","_fileExtensionCompressed","_x2","_x3","_ref4","_callee4","file","fileName","dotIndex","_context4","lastIndexOf","_fileExtension","substring","toLowerCase","alert","_getHiddenByteArray","showTextOnCanvas","_x4","reader","FileReader","onload","event","arrayBuffer","target","result","Uint8Array","updateInnerImage","readAsArrayBuffer","_callee5","scaleRatio","_args5","_context5","undefined","Image","clearCanvas","URL","revokeObjectURL","src","onerror","createObjectURL","_outputCanvas","innerImageDataAdjust","coverImageDataAdjust","_coverCanvas","_outputData","imgData","ImageData","putImageData","_isOutputCanvasCleared","gray","contrast","_coverContrast","_coverLuminance","luminance","timestamp","link","document","createElement","pngBlob","Blob","pngEncode","href","download","body","appendChild","click","removeChild","isAddMark","size","diff","version","_ref6","_callee6","isCompress","_context6","_x5","contrast_inner","contrast_cover","luminance_inner","luminance_cover","mirage_size","encode_compress","encode_compress_quality","version_0","difference","version_1","version_2","getElementById","add_mark","_markRatio","mark_ratio","Encoder_v0","Encoder_v1","Encoder_v2","startx","starty","newWidth","newHeight","currRatio","canvas","markImage","applicationState","markRatio","CloakUniversal","_this2","pixelIndex","pixelIndexMod3","byteIndex","_getBitsFromByte","_targetSize","_remained","_getRandomBits","scale","offset","origByte","byte","_calParityBit","random","parity","_globalDefaultDiff","default_difference","_defaultDiff","remained","_padding","padding","_scale_i","scale_inner","_offset_i","offset_inner","_scale_c","scale_cover","_offset_c","offset_cover","innerImageData","coverImageData","hiddenFile","fileExtensionName","customDiff","writeVersion","_innerData","_coverData","_pixelRange","outputData","Uint8ClampedArray","_isInner","_scale","_this$_getBits","_getBits","_this$_getBits2","_Encoder_v3","_this3","bytePairIndex","_getBitsFromBytePair","origBytePair","_calParityBitPair","bytePair","_superPropGet","newByteArray","set","_this$_getBitsPair","_getBitsPair","_this$_getBitsPair2","_this4","_this4$_byteArray","_this4$_byteArray2","_this4$_byteArray3","innerData","coverData","pixelRange","_compress","_calCompress","_scaleInner","_toConsumableArray","toString","split","map","classifyFileType","_fileArray","_bytePos","_buffer","_bufferSize","baseInner","isInner","_popBits","_scaleCover","compress","min","max","_pushByte","bits","mimeTypes","dataUrl","fileExtention","text","additionalText","clearRect","font","fillStyle","getComputedStyle","documentElement","getPropertyValue","textAlign","fillText","ret","oldData","factor","truncate","newImageData","fileExtension","extension"],"sourceRoot":""}